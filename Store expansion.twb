<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0721.1350                               -->
<workbook original-version='18.1' source-build='2020.2.4 (20202.20.0721.1350)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='P1-US-Cities-Population' inline='true' name='federated.0df7g0i07q3e8j1dhxbt017zs653' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-US-Cities-Population' name='textscan.1bql22c15oryx613ubiqy1bbmca4'>
            <connection class='textscan' directory='C:/Users/kutog/Downloads/Tableau' filename='P1-US-Cities-Population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1bql22c15oryx613ubiqy1bbmca4' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='2015 rank' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='2015 estimate' ordinal='3' />
            <column datatype='integer' name='2010 Census' ordinal='4' />
            <column datatype='string' name='Change' ordinal='5' />
            <column datatype='string' name='2014 land area' ordinal='6' />
            <column datatype='string' name='2010 population density' ordinal='7' />
            <column datatype='string' name='Location' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1bql22c15oryx613ubiqy1bbmca4' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='2015 rank' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='2015 estimate' ordinal='3' />
            <column datatype='integer' name='2010 Census' ordinal='4' />
            <column datatype='string' name='Change' ordinal='5' />
            <column datatype='string' name='2014 land area' ordinal='6' />
            <column datatype='string' name='2010 population density' ordinal='7' />
            <column datatype='string' name='Location' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015 rank]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2015 rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 estimate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015 estimate]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2015 estimate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010 Census</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010 Census]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2010 Census</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014 land area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2014 land area]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2014 land area</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010 population density</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2010 population density]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2010 population density</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='P1-US-Cities-Population.csv' datatype='table' name='[__tableau_internal_object_id__].[P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='P1-US-Cities-Population.csv' id='P1-US-Cities-Population.csv_FEEAA35BED3F4CDC99C90F622FAA2088'>
            <properties context=''>
              <relation connection='textscan.1bql22c15oryx613ubiqy1bbmca4' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='2015 rank' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='integer' name='2015 estimate' ordinal='3' />
                  <column datatype='integer' name='2010 Census' ordinal='4' />
                  <column datatype='string' name='Change' ordinal='5' />
                  <column datatype='string' name='2014 land area' ordinal='6' />
                  <column datatype='string' name='2010 population density' ordinal='7' />
                  <column datatype='string' name='Location' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Connection' inline='true' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-StartupExpansion' name='excel-direct.1t6sm461u8fdoy18gziur02otoai'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kutog/Downloads/Tableau/P1-StartupExpansion.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='P1-US-Cities-Population' name='textscan.0hlxk3s1oc0gck1gb6yf717nxscy'>
            <connection class='textscan' directory='C:/Users/kutog/Downloads/Tableau' filename='P1-US-Cities-Population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hlxk3s1oc0gck1gb6yf717nxscy' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='2015 rank' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='2015 estimate' ordinal='3' />
            <column datatype='integer' name='2010 Census' ordinal='4' />
            <column datatype='string' name='Change' ordinal='5' />
            <column datatype='string' name='2014 land area' ordinal='6' />
            <column datatype='string' name='2010 population density' ordinal='7' />
            <column datatype='string' name='Location' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1t6sm461u8fdoy18gziur02otoai' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:G151:no:A1:G151:0' header='yes' outcome='6'>
              <column datatype='integer' name='Store ID' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='string' name='Sales Region' ordinal='3' />
              <column datatype='string' name='New Expansion' ordinal='4' />
              <column datatype='integer' name='Marketing Spend' ordinal='5' />
              <column datatype='integer' name='Revenue' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0hlxk3s1oc0gck1gb6yf717nxscy' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='2015 rank' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='integer' name='2015 estimate' ordinal='3' />
              <column datatype='integer' name='2010 Census' ordinal='4' />
              <column datatype='string' name='Change' ordinal='5' />
              <column datatype='string' name='2014 land area' ordinal='6' />
              <column datatype='string' name='2010 population density' ordinal='7' />
              <column datatype='string' name='Location' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2010 Census]' value='[P1-US-Cities-Population.csv].[2010 Census]' />
          <map key='[2010 population density]' value='[P1-US-Cities-Population.csv].[2010 population density]' />
          <map key='[2014 land area]' value='[P1-US-Cities-Population.csv].[2014 land area]' />
          <map key='[2015 estimate]' value='[P1-US-Cities-Population.csv].[2015 estimate]' />
          <map key='[2015 rank]' value='[P1-US-Cities-Population.csv].[2015 rank]' />
          <map key='[Change]' value='[P1-US-Cities-Population.csv].[Change]' />
          <map key='[City (P1-US-Cities-Population.csv)]' value='[P1-US-Cities-Population.csv].[City]' />
          <map key='[City]' value='[Sheet1].[City]' />
          <map key='[Location]' value='[P1-US-Cities-Population.csv].[Location]' />
          <map key='[Marketing Spend]' value='[Sheet1].[Marketing Spend]' />
          <map key='[New Expansion]' value='[Sheet1].[New Expansion]' />
          <map key='[Revenue]' value='[Sheet1].[Revenue]' />
          <map key='[Sales Region]' value='[Sheet1].[Sales Region]' />
          <map key='[State (P1-US-Cities-Population.csv)]' value='[P1-US-Cities-Population.csv].[State]' />
          <map key='[State]' value='[Sheet1].[State]' />
          <map key='[Store ID]' value='[Sheet1].[Store ID]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G151:no:A1:G151:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Store ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Store ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Expansion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[New Expansion]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>New Expansion</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing Spend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketing Spend]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Marketing Spend</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015 rank]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2015 rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (P1-US-Cities-Population.csv)]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (P1-US-Cities-Population.csv)]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 estimate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015 estimate]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2015 estimate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010 Census</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010 Census]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2010 Census</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014 land area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2014 land area]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2014 land area</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010 population density</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2010 population density]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>2010 population density</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[P1-US-Cities-Population.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[2015 estimate]' role='measure' type='quantitative' />
      <column caption='ROMI' datatype='real' name='[Calculation_483855496340594688]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Revenue]/[Marketing Spend]' />
      </column>
      <column caption='City (US-Cities-Population), New Expansion, Store ID (clusters)' datatype='string' name='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' parent-model='[AnalyticModel:{1547fc61-28af-4e57-8ad8-93905c29cedb}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[City (P1-US-Cities-Population.csv), New Expansion, Store ID]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Bellevue&quot;,&quot;Old&quot;,118)</value>
            <value>(&quot;Bridgeport&quot;,&quot;Old&quot;,123)</value>
            <value>(&quot;Carrollton&quot;,&quot;Old&quot;,44)</value>
            <value>(&quot;Cedar Rapids&quot;,&quot;Old&quot;,127)</value>
            <value>(&quot;Charleston&quot;,&quot;Old&quot;,34)</value>
            <value>(&quot;Columbia&quot;,&quot;Old&quot;,61)</value>
            <value>(&quot;Concord&quot;,&quot;Old&quot;,21)</value>
            <value>(&quot;Coral Springs&quot;,&quot;Old&quot;,102)</value>
            <value>(&quot;Costa Mesa&quot;,&quot;Old&quot;,80)</value>
            <value>(&quot;Davie&quot;,&quot;Old&quot;,68)</value>
            <value>(&quot;Dayton&quot;,&quot;Old&quot;,96)</value>
            <value>(&quot;Denton&quot;,&quot;Old&quot;,4)</value>
            <value>(&quot;Elizabeth&quot;,&quot;Old&quot;,27)</value>
            <value>(&quot;Fullerton&quot;,&quot;Old&quot;,52)</value>
            <value>(&quot;Gainesville&quot;,&quot;Old&quot;,95)</value>
            <value>(&quot;Greeley&quot;,&quot;Old&quot;,85)</value>
            <value>(&quot;Hampton&quot;,&quot;Old&quot;,57)</value>
            <value>(&quot;Joliet&quot;,&quot;New&quot;,143)</value>
            <value>(&quot;Kent&quot;,&quot;Old&quot;,19)</value>
            <value>(&quot;Killeen&quot;,&quot;Old&quot;,104)</value>
            <value>(&quot;Lafayette&quot;,&quot;Old&quot;,139)</value>
            <value>(&quot;McAllen&quot;,&quot;Old&quot;,115)</value>
            <value>(&quot;Mesquite&quot;,&quot;Old&quot;,91)</value>
            <value>(&quot;Midland&quot;,&quot;Old&quot;,2)</value>
            <value>(&quot;Miramar&quot;,&quot;Old&quot;,39)</value>
            <value>(&quot;Murfreesboro&quot;,&quot;Old&quot;,74)</value>
            <value>(&quot;Naperville&quot;,&quot;Old&quot;,98)</value>
            <value>(&quot;New Haven&quot;,&quot;Old&quot;,78)</value>
            <value>(&quot;Olathe&quot;,&quot;Old&quot;,50)</value>
            <value>(&quot;Orange&quot;,&quot;Old&quot;,105)</value>
            <value>(&quot;Pasadena&quot;,&quot;Old&quot;,46)</value>
            <value>(&quot;Paterson&quot;,&quot;New&quot;,146)</value>
            <value>(&quot;Renton&quot;,&quot;Old&quot;,114)</value>
            <value>(&quot;Rockford&quot;,&quot;New&quot;,148)</value>
            <value>(&quot;Roseville&quot;,&quot;Old&quot;,47)</value>
            <value>(&quot;San Angelo&quot;,&quot;Old&quot;,49)</value>
            <value>(&quot;Santa Clara&quot;,&quot;Old&quot;,66)</value>
            <value>(&quot;Savannah&quot;,&quot;Old&quot;,131)</value>
            <value>(&quot;Simi Valley&quot;,&quot;Old&quot;,62)</value>
            <value>(&quot;Stamford&quot;,&quot;Old&quot;,111)</value>
            <value>(&quot;Sterling Heights&quot;,&quot;Old&quot;,121)</value>
            <value>(&quot;Surprise&quot;,&quot;Old&quot;,101)</value>
            <value>(&quot;Syracuse&quot;,&quot;Old&quot;,41)</value>
            <value>(&quot;Thornton&quot;,&quot;Old&quot;,56)</value>
            <value>(&quot;Thousand Oaks&quot;,&quot;New&quot;,150)</value>
            <value>(&quot;Topeka&quot;,&quot;Old&quot;,76)</value>
            <value>(&quot;Visalia&quot;,&quot;Old&quot;,103)</value>
            <value>(&quot;Waco&quot;,&quot;Old&quot;,29)</value>
            <value>(&quot;Warren&quot;,&quot;Old&quot;,137)</value>
            <value>(&quot;West Valley City&quot;,&quot;Old&quot;,77)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Antioch&quot;,&quot;Old&quot;,8)</value>
            <value>(&quot;Billings&quot;,&quot;Old&quot;,100)</value>
            <value>(&quot;Boulder&quot;,&quot;Old&quot;,31)</value>
            <value>(&quot;Broken Arrow&quot;,&quot;Old&quot;,20)</value>
            <value>(&quot;Burbank&quot;,&quot;Old&quot;,24)</value>
            <value>(&quot;Cambridge&quot;,&quot;Old&quot;,84)</value>
            <value>(&quot;Centennial&quot;,&quot;Old&quot;,70)</value>
            <value>(&quot;Clovis&quot;,&quot;Old&quot;,99)</value>
            <value>(&quot;College Station&quot;,&quot;New&quot;,149)</value>
            <value>(&quot;Daly City&quot;,&quot;Old&quot;,124)</value>
            <value>(&quot;Davenport&quot;,&quot;Old&quot;,60)</value>
            <value>(&quot;Edison&quot;,&quot;Old&quot;,30)</value>
            <value>(&quot;El Cajon&quot;,&quot;Old&quot;,65)</value>
            <value>(&quot;Elgin&quot;,&quot;Old&quot;,93)</value>
            <value>(&quot;Everett&quot;,&quot;Old&quot;,54)</value>
            <value>(&quot;Green Bay&quot;,&quot;Old&quot;,134)</value>
            <value>(&quot;Gresham&quot;,&quot;Old&quot;,86)</value>
            <value>(&quot;High Point&quot;,&quot;Old&quot;,88)</value>
            <value>(&quot;Hillsboro&quot;,&quot;Old&quot;,15)</value>
            <value>(&quot;Inglewood&quot;,&quot;Old&quot;,37)</value>
            <value>(&quot;Lakeland&quot;,&quot;Old&quot;,69)</value>
            <value>(&quot;Las Cruces&quot;,&quot;Old&quot;,13)</value>
            <value>(&quot;Lewisville&quot;,&quot;Old&quot;,43)</value>
            <value>(&quot;Lowell&quot;,&quot;Old&quot;,71)</value>
            <value>(&quot;Manchester&quot;,&quot;Old&quot;,53)</value>
            <value>(&quot;Murrieta&quot;,&quot;Old&quot;,48)</value>
            <value>(&quot;North Charleston&quot;,&quot;Old&quot;,83)</value>
            <value>(&quot;Norwalk&quot;,&quot;Old&quot;,138)</value>
            <value>(&quot;Palm Bay&quot;,&quot;Old&quot;,73)</value>
            <value>(&quot;Pearland&quot;,&quot;Old&quot;,36)</value>
            <value>(&quot;Pompano Beach&quot;,&quot;Old&quot;,130)</value>
            <value>(&quot;Pueblo&quot;,&quot;Old&quot;,79)</value>
            <value>(&quot;Rialto&quot;,&quot;Old&quot;,11)</value>
            <value>(&quot;Richardson&quot;,&quot;Old&quot;,106)</value>
            <value>(&quot;Richmond&quot;,&quot;Old&quot;,63)</value>
            <value>(&quot;Rochester&quot;,&quot;Old&quot;,125)</value>
            <value>(&quot;San Mateo&quot;,&quot;Old&quot;,136)</value>
            <value>(&quot;Sandy Springs&quot;,&quot;Old&quot;,126)</value>
            <value>(&quot;Santa Maria&quot;,&quot;Old&quot;,12)</value>
            <value>(&quot;South Bend&quot;,&quot;Old&quot;,107)</value>
            <value>(&quot;Temecula&quot;,&quot;Old&quot;,16)</value>
            <value>(&quot;Tyler&quot;,&quot;Old&quot;,33)</value>
            <value>(&quot;Ventura&quot;,&quot;Old&quot;,59)</value>
            <value>(&quot;Vista&quot;,&quot;Old&quot;,89)</value>
            <value>(&quot;Waterbury&quot;,&quot;Old&quot;,58)</value>
            <value>(&quot;West Covina&quot;,&quot;Old&quot;,55)</value>
            <value>(&quot;West Jordan&quot;,&quot;Old&quot;,132)</value>
            <value>(&quot;West Palm Beach&quot;,&quot;Old&quot;,112)</value>
            <value>(&quot;Wichita Falls&quot;,&quot;Old&quot;,97)</value>
            <value>(&quot;Woodbridge&quot;,&quot;Old&quot;,116)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>(&quot;Akron&quot;,&quot;Old&quot;,51)</value>
            <value>(&quot;Amarillo&quot;,&quot;Old&quot;,87)</value>
            <value>(&quot;Augusta&quot;,&quot;Old&quot;,92)</value>
            <value>(&quot;Aurora&quot;,&quot;Old&quot;,94)</value>
            <value>(&quot;Birmingham&quot;,&quot;Old&quot;,7)</value>
            <value>(&quot;Brownsville&quot;,&quot;New&quot;,147)</value>
            <value>(&quot;Cape Coral&quot;,&quot;Old&quot;,40)</value>
            <value>(&quot;Chattanooga&quot;,&quot;New&quot;,141)</value>
            <value>(&quot;Columbus&quot;,&quot;Old&quot;,128)</value>
            <value>(&quot;Des Moines&quot;,&quot;Old&quot;,133)</value>
            <value>(&quot;Elk Grove&quot;,&quot;Old&quot;,25)</value>
            <value>(&quot;Fayetteville&quot;,&quot;Old&quot;,108)</value>
            <value>(&quot;Fontana&quot;,&quot;Old&quot;,18)</value>
            <value>(&quot;Fort Lauderdale&quot;,&quot;Old&quot;,82)</value>
            <value>(&quot;Garden Grove&quot;,&quot;Old&quot;,81)</value>
            <value>(&quot;Glendale&quot;,&quot;New&quot;,145)</value>
            <value>(&quot;Grand Prairie&quot;,&quot;Old&quot;,110)</value>
            <value>(&quot;Grand Rapids&quot;,&quot;Old&quot;,32)</value>
            <value>(&quot;Huntington Beach&quot;,&quot;Old&quot;,119)</value>
            <value>(&quot;Huntsville&quot;,&quot;Old&quot;,35)</value>
            <value>(&quot;Jackson&quot;,&quot;Old&quot;,14)</value>
            <value>(&quot;Knoxville&quot;,&quot;Old&quot;,113)</value>
            <value>(&quot;Little Rock&quot;,&quot;Old&quot;,64)</value>
            <value>(&quot;Mobile&quot;,&quot;Old&quot;,122)</value>
            <value>(&quot;Modesto&quot;,&quot;Old&quot;,22)</value>
            <value>(&quot;Montgomery&quot;,&quot;Old&quot;,23)</value>
            <value>(&quot;Moreno Valley&quot;,&quot;Old&quot;,129)</value>
            <value>(&quot;Newport News&quot;,&quot;Old&quot;,42)</value>
            <value>(&quot;Oceanside&quot;,&quot;Old&quot;,67)</value>
            <value>(&quot;Ontario&quot;,&quot;Old&quot;,72)</value>
            <value>(&quot;Overland Park&quot;,&quot;Old&quot;,5)</value>
            <value>(&quot;Oxnard&quot;,&quot;Old&quot;,38)</value>
            <value>(&quot;Peoria&quot;,&quot;Old&quot;,1)</value>
            <value>(&quot;Port St. Lucie&quot;,&quot;Old&quot;,26)</value>
            <value>(&quot;Providence&quot;,&quot;Old&quot;,140)</value>
            <value>(&quot;Rancho Cucamonga&quot;,&quot;New&quot;,144)</value>
            <value>(&quot;Rochester&quot;,&quot;Old&quot;,10)</value>
            <value>(&quot;Salt Lake City&quot;,&quot;Old&quot;,28)</value>
            <value>(&quot;San Bernardino&quot;,&quot;Old&quot;,45)</value>
            <value>(&quot;Santa Clarita&quot;,&quot;Old&quot;,120)</value>
            <value>(&quot;Santa Rosa&quot;,&quot;Old&quot;,135)</value>
            <value>(&quot;Shreveport&quot;,&quot;Old&quot;,117)</value>
            <value>(&quot;Sioux Falls&quot;,&quot;Old&quot;,109)</value>
            <value>(&quot;Spokane&quot;,&quot;Old&quot;,3)</value>
            <value>(&quot;Tacoma&quot;,&quot;Old&quot;,90)</value>
            <value>(&quot;Tallahassee&quot;,&quot;Old&quot;,17)</value>
            <value>(&quot;Tempe&quot;,&quot;New&quot;,142)</value>
            <value>(&quot;Vancouver&quot;,&quot;Old&quot;,75)</value>
            <value>(&quot;Worcester&quot;,&quot;Old&quot;,9)</value>
            <value>(&quot;Yonkers&quot;,&quot;Old&quot;,6)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[City (P1-US-Cities-Population.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
      <column datatype='string' name='[New Expansion]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sales Region &amp; State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Sales Region &amp; State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(Region 2, Arizona), (Region 2, Arkansas), (Region 2, California) and 9 more&quot;'>
            <value>(&quot;Region 2&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;California&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Kansas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Washington&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sales Region &amp; State 1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Sales Region &amp; State 1]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(Region 2, Arizona), (Region 2, Arkansas), (Region 2, California) and 9 more&quot;'>
            <value>(&quot;Region 2&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;California&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Kansas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Region 2&quot;,&quot;Washington&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column aggregate-role-from='[State]' datatype='string' name='[Sales Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (P1-US-Cities-Population.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Arizona, Arkansas, California and 9 more&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Store ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='P1-US-Cities-Population.csv' datatype='table' name='[__tableau_internal_object_id__].[P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7A1CDBA00A72415DA550E012A1D05F66]' role='measure' type='quantitative' />
      <column-instance column='[City (P1-US-Cities-Population.csv)]' derivation='None' name='[none:City (P1-US-Cities-Population.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[New Expansion]' derivation='None' name='[none:New Expansion:nk]' pivot='key' type='nominal' />
      <column-instance column='[Store ID]' derivation='None' name='[none:Store ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[2015 estimate]' derivation='Sum' name='[sum:2015 estimate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing Spend]' derivation='Sum' name='[sum:Marketing Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
      <group auto-hidden='true' hidden='true' name='[City (P1-US-Cities-Population.csv), New Expansion, Store ID]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:City (P1-US-Cities-Population.csv):nk]' />
          <groupfilter function='level-members' level='[none:New Expansion:nk]' />
          <groupfilter function='level-members' level='[none:Store ID:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Sales Region &amp; State 1]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sales Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Sales Region &amp; State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sales Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Sales Region, State'>
          <field>[Sales Region]</field>
          <field>[State]</field>
        </drill-path>
        <drill-path name='State, City' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#11a29d'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona, Arkansas, California and 9 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{1547fc61-28af-4e57-8ad8-93905c29cedb}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Marketing Spend:qk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Revenue:qk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:2015 estimate:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City (P1-US-Cities-Population.csv):nk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:New Expansion:nk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Store ID:ok]' />
          </lod-fields>
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{4493c1a6-a212-4163-9daa-49977ef27ac3}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Marketing Spend:qk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Revenue:qk]' />
            <field name='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:2015 estimate:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='P1-US-Cities-Population.csv' id='P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E'>
            <properties context=''>
              <relation connection='textscan.0hlxk3s1oc0gck1gb6yf717nxscy' name='P1-US-Cities-Population.csv' table='[P1-US-Cities-Population#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='2015 rank' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='integer' name='2015 estimate' ordinal='3' />
                  <column datatype='integer' name='2010 Census' ordinal='4' />
                  <column datatype='string' name='Change' ordinal='5' />
                  <column datatype='string' name='2014 land area' ordinal='6' />
                  <column datatype='string' name='2010 population density' ordinal='7' />
                  <column datatype='string' name='Location' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_7A1CDBA00A72415DA550E012A1D05F66'>
            <properties context=''>
              <relation connection='excel-direct.1t6sm461u8fdoy18gziur02otoai' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G151:no:A1:G151:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Store ID' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Sales Region' ordinal='3' />
                  <column datatype='string' name='New Expansion' ordinal='4' />
                  <column datatype='integer' name='Marketing Spend' ordinal='5' />
                  <column datatype='integer' name='Revenue' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[State]' />
                <expression op='[State (P1-US-Cities-Population.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[City]' />
                <expression op='[City (P1-US-Cities-Population.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='Sheet1_7A1CDBA00A72415DA550E012A1D05F66' />
            <second-end-point object-id='P1-US-Cities-Population.csv_64EE6301A2254FF08B022945D4073B4E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Marketing Spend vs Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='Connection' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' />
          </datasources>
          <datasource-dependencies datasource='federated.1emd1la0s6n9ly1do5vjt1gnvok7'>
            <column datatype='integer' name='[2015 estimate]' role='measure' type='quantitative' />
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{4493c1a6-a212-4163-9daa-49977ef27ac3}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[City (P1-US-Cities-Population.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
            <column datatype='string' name='[New Expansion]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Store ID]' role='dimension' type='ordinal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City (P1-US-Cities-Population.csv)]' derivation='None' name='[none:City (P1-US-Cities-Population.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[New Expansion]' derivation='None' name='[none:New Expansion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store ID]' derivation='None' name='[none:Store ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[2015 estimate]' derivation='Sum' name='[sum:2015 estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing Spend]' derivation='Sum' name='[sum:Marketing Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Marketing Spend:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Marketing Spend:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Store ID:ok]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:New Expansion:nk]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:2015 estimate:qk]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City (P1-US-Cities-Population.csv):nk]' />
              <color column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:AdhocCluster:1:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.1754143238067627' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='500' />
                <format attr='maxwidth' value='500' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Revenue:qk]</rows>
        <cols>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:Marketing Spend:qk]</cols>
      </table>
      <simple-id uuid='{38AA87D4-FE35-4B99-86AE-BEF259F3D281}' />
    </worksheet>
    <worksheet name='Reusing cluster on Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Connection' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1emd1la0s6n9ly1do5vjt1gnvok7'>
            <column datatype='integer' name='[2015 estimate]' role='measure' type='quantitative' />
            <column caption='City (US-Cities-Population), New Expansion, Store ID (clusters)' datatype='string' name='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' parent-model='[AnalyticModel:{1547fc61-28af-4e57-8ad8-93905c29cedb}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[City (P1-US-Cities-Population.csv), New Expansion, Store ID]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Cluster 1&quot;'>
                  <value>(&quot;Bellevue&quot;,&quot;Old&quot;,118)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Old&quot;,123)</value>
                  <value>(&quot;Carrollton&quot;,&quot;Old&quot;,44)</value>
                  <value>(&quot;Cedar Rapids&quot;,&quot;Old&quot;,127)</value>
                  <value>(&quot;Charleston&quot;,&quot;Old&quot;,34)</value>
                  <value>(&quot;Columbia&quot;,&quot;Old&quot;,61)</value>
                  <value>(&quot;Concord&quot;,&quot;Old&quot;,21)</value>
                  <value>(&quot;Coral Springs&quot;,&quot;Old&quot;,102)</value>
                  <value>(&quot;Costa Mesa&quot;,&quot;Old&quot;,80)</value>
                  <value>(&quot;Davie&quot;,&quot;Old&quot;,68)</value>
                  <value>(&quot;Dayton&quot;,&quot;Old&quot;,96)</value>
                  <value>(&quot;Denton&quot;,&quot;Old&quot;,4)</value>
                  <value>(&quot;Elizabeth&quot;,&quot;Old&quot;,27)</value>
                  <value>(&quot;Fullerton&quot;,&quot;Old&quot;,52)</value>
                  <value>(&quot;Gainesville&quot;,&quot;Old&quot;,95)</value>
                  <value>(&quot;Greeley&quot;,&quot;Old&quot;,85)</value>
                  <value>(&quot;Hampton&quot;,&quot;Old&quot;,57)</value>
                  <value>(&quot;Joliet&quot;,&quot;New&quot;,143)</value>
                  <value>(&quot;Kent&quot;,&quot;Old&quot;,19)</value>
                  <value>(&quot;Killeen&quot;,&quot;Old&quot;,104)</value>
                  <value>(&quot;Lafayette&quot;,&quot;Old&quot;,139)</value>
                  <value>(&quot;McAllen&quot;,&quot;Old&quot;,115)</value>
                  <value>(&quot;Mesquite&quot;,&quot;Old&quot;,91)</value>
                  <value>(&quot;Midland&quot;,&quot;Old&quot;,2)</value>
                  <value>(&quot;Miramar&quot;,&quot;Old&quot;,39)</value>
                  <value>(&quot;Murfreesboro&quot;,&quot;Old&quot;,74)</value>
                  <value>(&quot;Naperville&quot;,&quot;Old&quot;,98)</value>
                  <value>(&quot;New Haven&quot;,&quot;Old&quot;,78)</value>
                  <value>(&quot;Olathe&quot;,&quot;Old&quot;,50)</value>
                  <value>(&quot;Orange&quot;,&quot;Old&quot;,105)</value>
                  <value>(&quot;Pasadena&quot;,&quot;Old&quot;,46)</value>
                  <value>(&quot;Paterson&quot;,&quot;New&quot;,146)</value>
                  <value>(&quot;Renton&quot;,&quot;Old&quot;,114)</value>
                  <value>(&quot;Rockford&quot;,&quot;New&quot;,148)</value>
                  <value>(&quot;Roseville&quot;,&quot;Old&quot;,47)</value>
                  <value>(&quot;San Angelo&quot;,&quot;Old&quot;,49)</value>
                  <value>(&quot;Santa Clara&quot;,&quot;Old&quot;,66)</value>
                  <value>(&quot;Savannah&quot;,&quot;Old&quot;,131)</value>
                  <value>(&quot;Simi Valley&quot;,&quot;Old&quot;,62)</value>
                  <value>(&quot;Stamford&quot;,&quot;Old&quot;,111)</value>
                  <value>(&quot;Sterling Heights&quot;,&quot;Old&quot;,121)</value>
                  <value>(&quot;Surprise&quot;,&quot;Old&quot;,101)</value>
                  <value>(&quot;Syracuse&quot;,&quot;Old&quot;,41)</value>
                  <value>(&quot;Thornton&quot;,&quot;Old&quot;,56)</value>
                  <value>(&quot;Thousand Oaks&quot;,&quot;New&quot;,150)</value>
                  <value>(&quot;Topeka&quot;,&quot;Old&quot;,76)</value>
                  <value>(&quot;Visalia&quot;,&quot;Old&quot;,103)</value>
                  <value>(&quot;Waco&quot;,&quot;Old&quot;,29)</value>
                  <value>(&quot;Warren&quot;,&quot;Old&quot;,137)</value>
                  <value>(&quot;West Valley City&quot;,&quot;Old&quot;,77)</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 2&quot;'>
                  <value>(&quot;Antioch&quot;,&quot;Old&quot;,8)</value>
                  <value>(&quot;Billings&quot;,&quot;Old&quot;,100)</value>
                  <value>(&quot;Boulder&quot;,&quot;Old&quot;,31)</value>
                  <value>(&quot;Broken Arrow&quot;,&quot;Old&quot;,20)</value>
                  <value>(&quot;Burbank&quot;,&quot;Old&quot;,24)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Old&quot;,84)</value>
                  <value>(&quot;Centennial&quot;,&quot;Old&quot;,70)</value>
                  <value>(&quot;Clovis&quot;,&quot;Old&quot;,99)</value>
                  <value>(&quot;College Station&quot;,&quot;New&quot;,149)</value>
                  <value>(&quot;Daly City&quot;,&quot;Old&quot;,124)</value>
                  <value>(&quot;Davenport&quot;,&quot;Old&quot;,60)</value>
                  <value>(&quot;Edison&quot;,&quot;Old&quot;,30)</value>
                  <value>(&quot;El Cajon&quot;,&quot;Old&quot;,65)</value>
                  <value>(&quot;Elgin&quot;,&quot;Old&quot;,93)</value>
                  <value>(&quot;Everett&quot;,&quot;Old&quot;,54)</value>
                  <value>(&quot;Green Bay&quot;,&quot;Old&quot;,134)</value>
                  <value>(&quot;Gresham&quot;,&quot;Old&quot;,86)</value>
                  <value>(&quot;High Point&quot;,&quot;Old&quot;,88)</value>
                  <value>(&quot;Hillsboro&quot;,&quot;Old&quot;,15)</value>
                  <value>(&quot;Inglewood&quot;,&quot;Old&quot;,37)</value>
                  <value>(&quot;Lakeland&quot;,&quot;Old&quot;,69)</value>
                  <value>(&quot;Las Cruces&quot;,&quot;Old&quot;,13)</value>
                  <value>(&quot;Lewisville&quot;,&quot;Old&quot;,43)</value>
                  <value>(&quot;Lowell&quot;,&quot;Old&quot;,71)</value>
                  <value>(&quot;Manchester&quot;,&quot;Old&quot;,53)</value>
                  <value>(&quot;Murrieta&quot;,&quot;Old&quot;,48)</value>
                  <value>(&quot;North Charleston&quot;,&quot;Old&quot;,83)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Old&quot;,138)</value>
                  <value>(&quot;Palm Bay&quot;,&quot;Old&quot;,73)</value>
                  <value>(&quot;Pearland&quot;,&quot;Old&quot;,36)</value>
                  <value>(&quot;Pompano Beach&quot;,&quot;Old&quot;,130)</value>
                  <value>(&quot;Pueblo&quot;,&quot;Old&quot;,79)</value>
                  <value>(&quot;Rialto&quot;,&quot;Old&quot;,11)</value>
                  <value>(&quot;Richardson&quot;,&quot;Old&quot;,106)</value>
                  <value>(&quot;Richmond&quot;,&quot;Old&quot;,63)</value>
                  <value>(&quot;Rochester&quot;,&quot;Old&quot;,125)</value>
                  <value>(&quot;San Mateo&quot;,&quot;Old&quot;,136)</value>
                  <value>(&quot;Sandy Springs&quot;,&quot;Old&quot;,126)</value>
                  <value>(&quot;Santa Maria&quot;,&quot;Old&quot;,12)</value>
                  <value>(&quot;South Bend&quot;,&quot;Old&quot;,107)</value>
                  <value>(&quot;Temecula&quot;,&quot;Old&quot;,16)</value>
                  <value>(&quot;Tyler&quot;,&quot;Old&quot;,33)</value>
                  <value>(&quot;Ventura&quot;,&quot;Old&quot;,59)</value>
                  <value>(&quot;Vista&quot;,&quot;Old&quot;,89)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Old&quot;,58)</value>
                  <value>(&quot;West Covina&quot;,&quot;Old&quot;,55)</value>
                  <value>(&quot;West Jordan&quot;,&quot;Old&quot;,132)</value>
                  <value>(&quot;West Palm Beach&quot;,&quot;Old&quot;,112)</value>
                  <value>(&quot;Wichita Falls&quot;,&quot;Old&quot;,97)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Old&quot;,116)</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 3&quot;'>
                  <value>(&quot;Akron&quot;,&quot;Old&quot;,51)</value>
                  <value>(&quot;Amarillo&quot;,&quot;Old&quot;,87)</value>
                  <value>(&quot;Augusta&quot;,&quot;Old&quot;,92)</value>
                  <value>(&quot;Aurora&quot;,&quot;Old&quot;,94)</value>
                  <value>(&quot;Birmingham&quot;,&quot;Old&quot;,7)</value>
                  <value>(&quot;Brownsville&quot;,&quot;New&quot;,147)</value>
                  <value>(&quot;Cape Coral&quot;,&quot;Old&quot;,40)</value>
                  <value>(&quot;Chattanooga&quot;,&quot;New&quot;,141)</value>
                  <value>(&quot;Columbus&quot;,&quot;Old&quot;,128)</value>
                  <value>(&quot;Des Moines&quot;,&quot;Old&quot;,133)</value>
                  <value>(&quot;Elk Grove&quot;,&quot;Old&quot;,25)</value>
                  <value>(&quot;Fayetteville&quot;,&quot;Old&quot;,108)</value>
                  <value>(&quot;Fontana&quot;,&quot;Old&quot;,18)</value>
                  <value>(&quot;Fort Lauderdale&quot;,&quot;Old&quot;,82)</value>
                  <value>(&quot;Garden Grove&quot;,&quot;Old&quot;,81)</value>
                  <value>(&quot;Glendale&quot;,&quot;New&quot;,145)</value>
                  <value>(&quot;Grand Prairie&quot;,&quot;Old&quot;,110)</value>
                  <value>(&quot;Grand Rapids&quot;,&quot;Old&quot;,32)</value>
                  <value>(&quot;Huntington Beach&quot;,&quot;Old&quot;,119)</value>
                  <value>(&quot;Huntsville&quot;,&quot;Old&quot;,35)</value>
                  <value>(&quot;Jackson&quot;,&quot;Old&quot;,14)</value>
                  <value>(&quot;Knoxville&quot;,&quot;Old&quot;,113)</value>
                  <value>(&quot;Little Rock&quot;,&quot;Old&quot;,64)</value>
                  <value>(&quot;Mobile&quot;,&quot;Old&quot;,122)</value>
                  <value>(&quot;Modesto&quot;,&quot;Old&quot;,22)</value>
                  <value>(&quot;Montgomery&quot;,&quot;Old&quot;,23)</value>
                  <value>(&quot;Moreno Valley&quot;,&quot;Old&quot;,129)</value>
                  <value>(&quot;Newport News&quot;,&quot;Old&quot;,42)</value>
                  <value>(&quot;Oceanside&quot;,&quot;Old&quot;,67)</value>
                  <value>(&quot;Ontario&quot;,&quot;Old&quot;,72)</value>
                  <value>(&quot;Overland Park&quot;,&quot;Old&quot;,5)</value>
                  <value>(&quot;Oxnard&quot;,&quot;Old&quot;,38)</value>
                  <value>(&quot;Peoria&quot;,&quot;Old&quot;,1)</value>
                  <value>(&quot;Port St. Lucie&quot;,&quot;Old&quot;,26)</value>
                  <value>(&quot;Providence&quot;,&quot;Old&quot;,140)</value>
                  <value>(&quot;Rancho Cucamonga&quot;,&quot;New&quot;,144)</value>
                  <value>(&quot;Rochester&quot;,&quot;Old&quot;,10)</value>
                  <value>(&quot;Salt Lake City&quot;,&quot;Old&quot;,28)</value>
                  <value>(&quot;San Bernardino&quot;,&quot;Old&quot;,45)</value>
                  <value>(&quot;Santa Clarita&quot;,&quot;Old&quot;,120)</value>
                  <value>(&quot;Santa Rosa&quot;,&quot;Old&quot;,135)</value>
                  <value>(&quot;Shreveport&quot;,&quot;Old&quot;,117)</value>
                  <value>(&quot;Sioux Falls&quot;,&quot;Old&quot;,109)</value>
                  <value>(&quot;Spokane&quot;,&quot;Old&quot;,3)</value>
                  <value>(&quot;Tacoma&quot;,&quot;Old&quot;,90)</value>
                  <value>(&quot;Tallahassee&quot;,&quot;Old&quot;,17)</value>
                  <value>(&quot;Tempe&quot;,&quot;New&quot;,142)</value>
                  <value>(&quot;Vancouver&quot;,&quot;Old&quot;,75)</value>
                  <value>(&quot;Worcester&quot;,&quot;Old&quot;,9)</value>
                  <value>(&quot;Yonkers&quot;,&quot;Old&quot;,6)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[City (P1-US-Cities-Population.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
            <column datatype='string' name='[New Expansion]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Store ID]' role='dimension' type='ordinal' />
            <column-instance column='[City (P1-US-Cities-Population.csv)]' derivation='None' name='[none:City (P1-US-Cities-Population.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Expansion]' derivation='None' name='[none:New Expansion:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store ID]' derivation='None' name='[none:Store ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[2015 estimate]' derivation='Sum' name='[sum:2015 estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing Spend]' derivation='Sum' name='[sum:Marketing Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:State:nk]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695313' />
                <format attr='mark-transparency' value='167' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Latitude (generated)]</rows>
        <cols>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A87F766A-BBD7-4FBE-A5ED-EDC9CCB95C8C}' />
    </worksheet>
    <worksheet name='Saving and reusing cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='Connection' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1emd1la0s6n9ly1do5vjt1gnvok7'>
            <column datatype='integer' name='[2015 estimate]' role='measure' type='quantitative' />
            <column caption='City (US-Cities-Population), New Expansion, Store ID (clusters)' datatype='string' name='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' parent-model='[AnalyticModel:{1547fc61-28af-4e57-8ad8-93905c29cedb}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[City (P1-US-Cities-Population.csv), New Expansion, Store ID]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Cluster 1&quot;'>
                  <value>(&quot;Bellevue&quot;,&quot;Old&quot;,118)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Old&quot;,123)</value>
                  <value>(&quot;Carrollton&quot;,&quot;Old&quot;,44)</value>
                  <value>(&quot;Cedar Rapids&quot;,&quot;Old&quot;,127)</value>
                  <value>(&quot;Charleston&quot;,&quot;Old&quot;,34)</value>
                  <value>(&quot;Columbia&quot;,&quot;Old&quot;,61)</value>
                  <value>(&quot;Concord&quot;,&quot;Old&quot;,21)</value>
                  <value>(&quot;Coral Springs&quot;,&quot;Old&quot;,102)</value>
                  <value>(&quot;Costa Mesa&quot;,&quot;Old&quot;,80)</value>
                  <value>(&quot;Davie&quot;,&quot;Old&quot;,68)</value>
                  <value>(&quot;Dayton&quot;,&quot;Old&quot;,96)</value>
                  <value>(&quot;Denton&quot;,&quot;Old&quot;,4)</value>
                  <value>(&quot;Elizabeth&quot;,&quot;Old&quot;,27)</value>
                  <value>(&quot;Fullerton&quot;,&quot;Old&quot;,52)</value>
                  <value>(&quot;Gainesville&quot;,&quot;Old&quot;,95)</value>
                  <value>(&quot;Greeley&quot;,&quot;Old&quot;,85)</value>
                  <value>(&quot;Hampton&quot;,&quot;Old&quot;,57)</value>
                  <value>(&quot;Joliet&quot;,&quot;New&quot;,143)</value>
                  <value>(&quot;Kent&quot;,&quot;Old&quot;,19)</value>
                  <value>(&quot;Killeen&quot;,&quot;Old&quot;,104)</value>
                  <value>(&quot;Lafayette&quot;,&quot;Old&quot;,139)</value>
                  <value>(&quot;McAllen&quot;,&quot;Old&quot;,115)</value>
                  <value>(&quot;Mesquite&quot;,&quot;Old&quot;,91)</value>
                  <value>(&quot;Midland&quot;,&quot;Old&quot;,2)</value>
                  <value>(&quot;Miramar&quot;,&quot;Old&quot;,39)</value>
                  <value>(&quot;Murfreesboro&quot;,&quot;Old&quot;,74)</value>
                  <value>(&quot;Naperville&quot;,&quot;Old&quot;,98)</value>
                  <value>(&quot;New Haven&quot;,&quot;Old&quot;,78)</value>
                  <value>(&quot;Olathe&quot;,&quot;Old&quot;,50)</value>
                  <value>(&quot;Orange&quot;,&quot;Old&quot;,105)</value>
                  <value>(&quot;Pasadena&quot;,&quot;Old&quot;,46)</value>
                  <value>(&quot;Paterson&quot;,&quot;New&quot;,146)</value>
                  <value>(&quot;Renton&quot;,&quot;Old&quot;,114)</value>
                  <value>(&quot;Rockford&quot;,&quot;New&quot;,148)</value>
                  <value>(&quot;Roseville&quot;,&quot;Old&quot;,47)</value>
                  <value>(&quot;San Angelo&quot;,&quot;Old&quot;,49)</value>
                  <value>(&quot;Santa Clara&quot;,&quot;Old&quot;,66)</value>
                  <value>(&quot;Savannah&quot;,&quot;Old&quot;,131)</value>
                  <value>(&quot;Simi Valley&quot;,&quot;Old&quot;,62)</value>
                  <value>(&quot;Stamford&quot;,&quot;Old&quot;,111)</value>
                  <value>(&quot;Sterling Heights&quot;,&quot;Old&quot;,121)</value>
                  <value>(&quot;Surprise&quot;,&quot;Old&quot;,101)</value>
                  <value>(&quot;Syracuse&quot;,&quot;Old&quot;,41)</value>
                  <value>(&quot;Thornton&quot;,&quot;Old&quot;,56)</value>
                  <value>(&quot;Thousand Oaks&quot;,&quot;New&quot;,150)</value>
                  <value>(&quot;Topeka&quot;,&quot;Old&quot;,76)</value>
                  <value>(&quot;Visalia&quot;,&quot;Old&quot;,103)</value>
                  <value>(&quot;Waco&quot;,&quot;Old&quot;,29)</value>
                  <value>(&quot;Warren&quot;,&quot;Old&quot;,137)</value>
                  <value>(&quot;West Valley City&quot;,&quot;Old&quot;,77)</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 2&quot;'>
                  <value>(&quot;Antioch&quot;,&quot;Old&quot;,8)</value>
                  <value>(&quot;Billings&quot;,&quot;Old&quot;,100)</value>
                  <value>(&quot;Boulder&quot;,&quot;Old&quot;,31)</value>
                  <value>(&quot;Broken Arrow&quot;,&quot;Old&quot;,20)</value>
                  <value>(&quot;Burbank&quot;,&quot;Old&quot;,24)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Old&quot;,84)</value>
                  <value>(&quot;Centennial&quot;,&quot;Old&quot;,70)</value>
                  <value>(&quot;Clovis&quot;,&quot;Old&quot;,99)</value>
                  <value>(&quot;College Station&quot;,&quot;New&quot;,149)</value>
                  <value>(&quot;Daly City&quot;,&quot;Old&quot;,124)</value>
                  <value>(&quot;Davenport&quot;,&quot;Old&quot;,60)</value>
                  <value>(&quot;Edison&quot;,&quot;Old&quot;,30)</value>
                  <value>(&quot;El Cajon&quot;,&quot;Old&quot;,65)</value>
                  <value>(&quot;Elgin&quot;,&quot;Old&quot;,93)</value>
                  <value>(&quot;Everett&quot;,&quot;Old&quot;,54)</value>
                  <value>(&quot;Green Bay&quot;,&quot;Old&quot;,134)</value>
                  <value>(&quot;Gresham&quot;,&quot;Old&quot;,86)</value>
                  <value>(&quot;High Point&quot;,&quot;Old&quot;,88)</value>
                  <value>(&quot;Hillsboro&quot;,&quot;Old&quot;,15)</value>
                  <value>(&quot;Inglewood&quot;,&quot;Old&quot;,37)</value>
                  <value>(&quot;Lakeland&quot;,&quot;Old&quot;,69)</value>
                  <value>(&quot;Las Cruces&quot;,&quot;Old&quot;,13)</value>
                  <value>(&quot;Lewisville&quot;,&quot;Old&quot;,43)</value>
                  <value>(&quot;Lowell&quot;,&quot;Old&quot;,71)</value>
                  <value>(&quot;Manchester&quot;,&quot;Old&quot;,53)</value>
                  <value>(&quot;Murrieta&quot;,&quot;Old&quot;,48)</value>
                  <value>(&quot;North Charleston&quot;,&quot;Old&quot;,83)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Old&quot;,138)</value>
                  <value>(&quot;Palm Bay&quot;,&quot;Old&quot;,73)</value>
                  <value>(&quot;Pearland&quot;,&quot;Old&quot;,36)</value>
                  <value>(&quot;Pompano Beach&quot;,&quot;Old&quot;,130)</value>
                  <value>(&quot;Pueblo&quot;,&quot;Old&quot;,79)</value>
                  <value>(&quot;Rialto&quot;,&quot;Old&quot;,11)</value>
                  <value>(&quot;Richardson&quot;,&quot;Old&quot;,106)</value>
                  <value>(&quot;Richmond&quot;,&quot;Old&quot;,63)</value>
                  <value>(&quot;Rochester&quot;,&quot;Old&quot;,125)</value>
                  <value>(&quot;San Mateo&quot;,&quot;Old&quot;,136)</value>
                  <value>(&quot;Sandy Springs&quot;,&quot;Old&quot;,126)</value>
                  <value>(&quot;Santa Maria&quot;,&quot;Old&quot;,12)</value>
                  <value>(&quot;South Bend&quot;,&quot;Old&quot;,107)</value>
                  <value>(&quot;Temecula&quot;,&quot;Old&quot;,16)</value>
                  <value>(&quot;Tyler&quot;,&quot;Old&quot;,33)</value>
                  <value>(&quot;Ventura&quot;,&quot;Old&quot;,59)</value>
                  <value>(&quot;Vista&quot;,&quot;Old&quot;,89)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Old&quot;,58)</value>
                  <value>(&quot;West Covina&quot;,&quot;Old&quot;,55)</value>
                  <value>(&quot;West Jordan&quot;,&quot;Old&quot;,132)</value>
                  <value>(&quot;West Palm Beach&quot;,&quot;Old&quot;,112)</value>
                  <value>(&quot;Wichita Falls&quot;,&quot;Old&quot;,97)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Old&quot;,116)</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 3&quot;'>
                  <value>(&quot;Akron&quot;,&quot;Old&quot;,51)</value>
                  <value>(&quot;Amarillo&quot;,&quot;Old&quot;,87)</value>
                  <value>(&quot;Augusta&quot;,&quot;Old&quot;,92)</value>
                  <value>(&quot;Aurora&quot;,&quot;Old&quot;,94)</value>
                  <value>(&quot;Birmingham&quot;,&quot;Old&quot;,7)</value>
                  <value>(&quot;Brownsville&quot;,&quot;New&quot;,147)</value>
                  <value>(&quot;Cape Coral&quot;,&quot;Old&quot;,40)</value>
                  <value>(&quot;Chattanooga&quot;,&quot;New&quot;,141)</value>
                  <value>(&quot;Columbus&quot;,&quot;Old&quot;,128)</value>
                  <value>(&quot;Des Moines&quot;,&quot;Old&quot;,133)</value>
                  <value>(&quot;Elk Grove&quot;,&quot;Old&quot;,25)</value>
                  <value>(&quot;Fayetteville&quot;,&quot;Old&quot;,108)</value>
                  <value>(&quot;Fontana&quot;,&quot;Old&quot;,18)</value>
                  <value>(&quot;Fort Lauderdale&quot;,&quot;Old&quot;,82)</value>
                  <value>(&quot;Garden Grove&quot;,&quot;Old&quot;,81)</value>
                  <value>(&quot;Glendale&quot;,&quot;New&quot;,145)</value>
                  <value>(&quot;Grand Prairie&quot;,&quot;Old&quot;,110)</value>
                  <value>(&quot;Grand Rapids&quot;,&quot;Old&quot;,32)</value>
                  <value>(&quot;Huntington Beach&quot;,&quot;Old&quot;,119)</value>
                  <value>(&quot;Huntsville&quot;,&quot;Old&quot;,35)</value>
                  <value>(&quot;Jackson&quot;,&quot;Old&quot;,14)</value>
                  <value>(&quot;Knoxville&quot;,&quot;Old&quot;,113)</value>
                  <value>(&quot;Little Rock&quot;,&quot;Old&quot;,64)</value>
                  <value>(&quot;Mobile&quot;,&quot;Old&quot;,122)</value>
                  <value>(&quot;Modesto&quot;,&quot;Old&quot;,22)</value>
                  <value>(&quot;Montgomery&quot;,&quot;Old&quot;,23)</value>
                  <value>(&quot;Moreno Valley&quot;,&quot;Old&quot;,129)</value>
                  <value>(&quot;Newport News&quot;,&quot;Old&quot;,42)</value>
                  <value>(&quot;Oceanside&quot;,&quot;Old&quot;,67)</value>
                  <value>(&quot;Ontario&quot;,&quot;Old&quot;,72)</value>
                  <value>(&quot;Overland Park&quot;,&quot;Old&quot;,5)</value>
                  <value>(&quot;Oxnard&quot;,&quot;Old&quot;,38)</value>
                  <value>(&quot;Peoria&quot;,&quot;Old&quot;,1)</value>
                  <value>(&quot;Port St. Lucie&quot;,&quot;Old&quot;,26)</value>
                  <value>(&quot;Providence&quot;,&quot;Old&quot;,140)</value>
                  <value>(&quot;Rancho Cucamonga&quot;,&quot;New&quot;,144)</value>
                  <value>(&quot;Rochester&quot;,&quot;Old&quot;,10)</value>
                  <value>(&quot;Salt Lake City&quot;,&quot;Old&quot;,28)</value>
                  <value>(&quot;San Bernardino&quot;,&quot;Old&quot;,45)</value>
                  <value>(&quot;Santa Clarita&quot;,&quot;Old&quot;,120)</value>
                  <value>(&quot;Santa Rosa&quot;,&quot;Old&quot;,135)</value>
                  <value>(&quot;Shreveport&quot;,&quot;Old&quot;,117)</value>
                  <value>(&quot;Sioux Falls&quot;,&quot;Old&quot;,109)</value>
                  <value>(&quot;Spokane&quot;,&quot;Old&quot;,3)</value>
                  <value>(&quot;Tacoma&quot;,&quot;Old&quot;,90)</value>
                  <value>(&quot;Tallahassee&quot;,&quot;Old&quot;,17)</value>
                  <value>(&quot;Tempe&quot;,&quot;New&quot;,142)</value>
                  <value>(&quot;Vancouver&quot;,&quot;Old&quot;,75)</value>
                  <value>(&quot;Worcester&quot;,&quot;Old&quot;,9)</value>
                  <value>(&quot;Yonkers&quot;,&quot;Old&quot;,6)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[City (P1-US-Cities-Population.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
            <column datatype='string' name='[New Expansion]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Store ID]' role='dimension' type='ordinal' />
            <column-instance column='[City (P1-US-Cities-Population.csv)]' derivation='None' name='[none:City (P1-US-Cities-Population.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[New Expansion]' derivation='None' name='[none:New Expansion:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store ID]' derivation='None' name='[none:Store ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[2015 estimate]' derivation='Sum' name='[sum:2015 estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing Spend]' derivation='Sum' name='[sum:Marketing Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' />
              <groupfilter function='member' level='[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' member='&quot;Not Clustered&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[sum:2015 estimate:qk]</rows>
        <cols>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]</cols>
      </table>
      <simple-id uuid='{EA779068-C90C-4147-8AC1-64167C5C9505}' />
    </worksheet>
    <worksheet name='Using Geographical Role'>
      <table>
        <view>
          <datasources>
            <datasource caption='Connection' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1emd1la0s6n9ly1do5vjt1gnvok7'>
            <column caption='ROMI' datatype='real' name='[Calculation_483855496340594688]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue]/[Marketing Spend]' />
            </column>
            <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Sales Region]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_483855496340594688]' derivation='Avg' name='[avg:Calculation_483855496340594688:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing Spend]' derivation='Avg' name='[avg:Marketing Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Avg' name='[avg:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Region]' derivation='None' name='[none:Sales Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Longitude (generated)]' field-type='quantitative' max='-7398676.5862123519' min='-15270963.64564053' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Latitude (generated)]' field-type='quantitative' max='7090041.7036151085' min='2547217.6271886723' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Marketing Spend:qk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Revenue:qk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Calculation_483855496340594688:qk]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' />
              <geometry column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Latitude (generated)]</rows>
        <cols>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{387FC154-BA05-4280-8BC6-FB6E8164F551}' />
    </worksheet>
    <worksheet name='Using Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Connection' name='federated.1emd1la0s6n9ly1do5vjt1gnvok7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1emd1la0s6n9ly1do5vjt1gnvok7'>
            <column caption='ROMI' datatype='real' name='[Calculation_483855496340594688]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue]/[Marketing Spend]' />
            </column>
            <column datatype='integer' name='[Marketing Spend]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Sales Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Arizona, Arkansas, California and 9 more&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_483855496340594688]' derivation='Avg' name='[avg:Calculation_483855496340594688:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing Spend]' derivation='Avg' name='[avg:Marketing Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Avg' name='[avg:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Region]' derivation='None' name='[none:Sales Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[State (group)]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Revenue:qk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Marketing Spend:qk]' />
              <text column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Calculation_483855496340594688:qk]' />
              <lod column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' />
              <geometry column='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]</run>
                <run>&gt;&#10;Revenue: &lt;</run>
                <run>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Revenue:qk]</run>
                <run>&gt;&#10;ROMI: &lt;</run>
                <run>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Calculation_483855496340594688:qk]</run>
                <run>&gt;&#10; Marketing Spend: &lt;</run>
                <run>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[avg:Marketing Spend:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Latitude (generated)]</rows>
        <cols>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1913F00-ECF6-4AE6-B6F7-622A5E1DE942}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Using Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[State (group)]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{122E683C-53A6-4C9D-920E-26CDD8FF1D4A}' />
    </window>
    <window class='worksheet' name='Using Geographical Role'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Sales Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4753464E-7A02-4184-BF60-ED4E7C6AC4D6}' />
    </window>
    <window class='worksheet' name='Marketing Spend vs Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:AdhocCluster:1:ok]' type='color' />
            <card param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:New Expansion:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City (P1-US-Cities-Population.csv):nk]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City:nk]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:New Expansion:nk]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:Store ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62B3E90E-74C2-4E63-93B3-F090D380CE12}' />
    </window>
    <window class='worksheet' name='Saving and reusing cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A269D3A-1C54-40C5-8635-1B3881FC712C}' />
    </window>
    <window class='worksheet' maximized='true' name='Reusing cluster on Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[City (P1-US-Cities-Population.csv), New Expansion, Store ID (clusters)]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[State (group)]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:City:nk]</field>
            <field>[federated.1emd1la0s6n9ly1do5vjt1gnvok7].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96A869E4-9530-44F6-904D-27B43B8BC007}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Marketing Spend vs Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reusing cluster on Map' width='192'>
      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
      EOigHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Saving and reusing cluster' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Using Geographical Role' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Using Group' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
